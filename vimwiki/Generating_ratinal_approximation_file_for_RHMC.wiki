
= Generating Rational approximation file =



* These files are specific to quark masses. to generate these follow the instructions : https://latticeqcd.github.io/SIMULATeQCD/03_applications/rhmc.html 
		* A tool to generate rational approximation files written by K. Clark
	can be found in `SIMULATeQCD/src/tools/rational_approx`. One can find a document
	`explainRatApprox.pdf` by Q. Yuan explaining the idea behind the rational 
	approximation for the fermion determinant, as well as some of the following
	notation. The makefile `makeRatApprox` will compile the executable `ratApprox`,
	which will generate you a rational approximation file for use with the 
	rhmc of SIMULATeQCD.  You can call it with

	```shell
	ratApprox input.dat out.rational 
	```

	The input file `input.dat` should be structured as

	```C
	npff        // Number of pseudo-fermion flavors

	y1
	y2
	mprec       // Pre-conditioner mass (reduces the condition number in CG)
	mq
	order1
	order2
	lambda_low
	lambda_high
	precision
	* exampleInput.dat
			 
			2

			3
			0
			0
			0.0652
			14
			12
			0.004251039999999999
			5.0
			50

			2
			-2
			0.0652
			0.00241
			14
			12
			5.8080999999999995e-06
			5.0
			160

== example ==

2        # number of pseudo fermion flavours

# parameters for psf1(light quark pseudo fermion determinant)
3              #y1
0             # y2
0                # preconditioning mass for strange quark determinant
0.0783706         # m_s (strange quark mass) (m_quark)
14
12
0.00614195094436        # (m_s)^{2}
5.0                   # $\lambda_{max}$   
50           # precision


# parameters for psf1(light quark pseudo fermion determinant)

2                  # y1
-2                        # y2
0.01508242900218416        # preconditioning mass (sqrt(m_l * m_s))
0.0029026             # light quark mass (m_l)
14               # order 1
12                # order2 
8.42508676e-06        # light quark mass squared
5.0                    # $\lambda_{max}$
160                   # precision


== Dependence of maximum error in rational approximation on different parameters ==

*The pdf at SIMULATeQCD/src/tools/rational_approx/explainRatApprox.pdf will have the below findings using plots*

* The error decreases linearly with respect to increase in degree of polynomial to be used for ratinal approximation.
* The error remains constant with respect to increase in precision for a chosen degree of polynomial.
* The error increases a bit for given degree of polynomial if we increase the ratio $\frac{m_{s}}{m_{l}}$



